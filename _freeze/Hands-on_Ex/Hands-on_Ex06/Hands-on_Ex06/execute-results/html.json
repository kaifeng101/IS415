{
  "hash": "63e3e1e46f393bd9ca5e660177d90a35",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 6\"\nsubtitle: \"Global Measures of Spatial Autocorrelation\"\nauthor: \"Kai Feng\"\ndate: \"Sept 20, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## 1.0 Overview\n\n-   **Objective of spatial policy**: Ensure equal distribution of development in the province.\n\n-   **Study Purpose**: Use spatial statistics to check for even distribution of development.\n\n-   **If Not Even**:\n\n    -   Investigate signs of spatial clustering (areas where development is grouped).\n\n    -   Identify where these clusters are located.\n\n-   **Focus**: Analyze the spatial pattern of GDP per capita in Hunan Province, China.\n\n<br/><br/>\n\n## **2.0 Setup**\n\n### **2.1 Installing R-Packages**\n\n-   **sf**: Importing and handling geospatial data in R\n\n-   **spdep**: Compute spatial weights, global and local spatial autocorrelation statistics\n\n-   **tmap**: Trepare cartographic quality chropleth map\n\n-   **tidyverse**: For wrangling attribute data in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, tmap, tidyverse)\n```\n:::\n\n\n<br/><br/>\n\n### **2.2 Data Acquisition**\n\nTwo data sets will be used:\n\n-   `Hunan county boundary layer`: a geospatial data set in ESRI shapefile format.\n\n-   `Hunan_2012.csv`: contains selected Hunan’s local development indicators in 2012.\n\n::: panel-tabset\n# **Importing Geospatial Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\Users\\ngkng\\Desktop\\School\\Geo -Local\\Hands-on_Ex\\Hands-on_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Importing Aspatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n:::\n\n<br/><br/>\n\n### **2.3 Performing relational join**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n:::\n\n\n### 2.4 Visualising Regional Development Indicator\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## 3.0 **Global Measures of Spatial Autocorrelation**\n\n::: panel-tabset\n## Step 1: Computing Contiguity Spatial Weights\n\nBefore we can compute the Global Spatial autocorrelation statistics, we need to:\n\n-   Construct spatial weights for the study area.\n\n    -   By Computing contiguity weight matrices based on adjacent regions.\n    -   **using Queen Criteria**:\n        -   Default is **TRUE**: Includes all neighbors that touch at edges or corners.\n\n        -   You can set `queen = FALSE` to consider only edge-touching neighbors (first-order neighbors).\n\n-   So we can Define neighborhood relationships between geographical units (e.g., counties).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n```\n\n\n:::\n:::\n\n\n::: callout-note\nThere are 88 area units in Hunan.\n\nThe most connected area unit has 11 neighbours\n\nOnly 2 area aunits with 1 link\n:::\n\n## Step 2: Row-standardised weights matrix\n\nNow, assign weights to each neighboring polygon.\n\n-   **Method**: Assign each using equal weights (style = \"W\")\n\n-   **Weight Calculation**:\n\n    -   Assign weight of fraction 1/(#ofneighbors) to each neighboring county\n\n    -   Sum the weighted values (e.g., income) from neighbors.\n\n-   **Drawback**:\n\n    -   Edge polygons have fewer neighbors, which can skew results (over- or under-estimate spatial autocorrelation).\n\n-   **Note**: For this example, we'll use style = \"W\" for simplicity, but other options, like style = \"B,\" are more robust.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n```\n\n\n:::\n:::\n\n\n::: callout-note\nThe function `nb2listw()` requires an object of class **nb** (neighborhood list).\n\n**style**: Defines how weights are calculated. Options include:\n\n-   **\"W\"**: Row standardized weights (sums to 1 across neighbors).\n\n-   **\"B\"**: Basic binary coding (weights are either 0 or 1).\n\n-   **\"C\"**: Globally standardized weights (sums to the total number of connections).\n\n-   **\"U\"**: Equal weights divided by the number of neighbors (sums to 1).\n\n-   **\"minmax\"**: Min-max normalization (scales weights between 0 and 1).\n\n-   **\"S\"**: Variance-stabilizing coding (improves stability of weights).\n\n**zero.poly**:\n\n-   If set to **TRUE**, this includes weights of zero for regions without neighbors.\n\n-   This results in lag values of zero for those regions, which means they won't affect the analysis.\n\n-   It uses a formula that generates a vector of zeros for regions without neighbors, leading to a spatially lagged value of zero for those regions.\n\n**Summary**\n\n-   The **style** argument determines how to handle the weights for neighboring regions.\n\n-   **zero.poly** allows for handling of regions that have no neighbors, potentially simplifying analysis but may not always be sensible.\n:::\n:::\n\n## 3.0 **Global Measures of Spatial Autocorrelation: Moran’s I**\n\n::: panel-tabset\n## Maron’s I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n\n::: callout-note\n## Findings\n\nMoran I statistic (0.300749970) -\\> indicate Positive correlation in GDP per capita\n\nSD of 4.7351 -\\> indicate Moran's I is \\> expected value under null hypo\n\nP-value of 1.095e-06 (0.000001095) -\\> is \\< 0.05, indicates strong statistical significance\n\nExpectation of -0.011494253 -\\> we expect slight negative autocorrelation if there were no spatial structure\n\nSince p-value \\< 0.05, we reject null hypo of no spatial autocorrelation. This strongly suggests there is significant positive spatial clustering of GDPPC in Hunan Province. (Regions with High GDPPC is near areas with high GDPPC\n:::\n\n## Computing Monte Carlo Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n::: callout-note\n## Findings\n\nMoran I statistic (0.30075) -\\> indicate Positive correlation in GDP per capita\n\nP-value of 0.001 -\\> \\< 0.05, indicates that the probability of obtaining a Moran's I value as extreme as the observed \\>= 1 under the null hypo\n\nThus, we reject null hypo as p value \\< 0.05. There is strong evidence that areas with high GDPPC are near areas with high GDPPC\n:::\n\n## Visualising Monte Carlo Moran’s I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.01504572\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.004371574\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Plotting using ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame from the simulated results\ndata <- data.frame(Simulated_Morans_I = bperm$res[1:999])\n\n# Plot using ggplot2\nggplot(data, aes(x = Simulated_Morans_I)) +\n  geom_histogram(binwidth = (max(data$Simulated_Morans_I) - min(data$Simulated_Morans_I)) / 20, \n                 fill = \"blue\", \n                 color = \"black\") +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n:::\n\n## 3.0 **Global Measures of Spatial Autocorrelation: Geary’s C**\n\n::: panel-tabset\n### **Geary’s C test**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(hunan$GDPPC, listw=rswm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n```\n\n\n:::\n:::\n\n\n::: callout-note\n## Findings\n\nGeary C statistic (0.6907223) -\\> indicate a level of spatial autocorrelation, lower value suggest positive spatial autocorrelation\n\nSD of 3.6108 -\\> indicates significant lower than expected value under null hypo\n\nP-value of 0.0001526 -\\> is \\< 0.05, indicates strong statistical significance\n\nExpectation of 1.0000000 -\\> on avg, we would expect no spatial autocorrelation\n\nSince p-value \\< 0.05, we reject null hypo of no spatial autocorrelation. This strongly suggests there is significant positive spatial clustering of GDPPC in Hunan Province. (Regions with High GDPPC is near areas with high GDPPC than would be expected by chance\n:::\n\n## Computing Monte Carlo **Geary’s C**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n::: callout-note\n## Findings\n\nGeary's C Statistic (0.69072) -\\> indicate some level of positive spatial autocorrelation\n\nObserved Rank of 1 -\\> indicates that the observed value is the smallest among all the simulated values. This suggests that the observed spatial autocorrelation is much stronger than what would be expected under the null hypothesis.\n\nP-value of 0.001 -\\> \\< 0.05, indicates strong statistical significance\n\nThus, we reject null hypo as p value \\< 0.05. There is strong evidence that areas with high GDPPC are near areas with high GDPPC\n:::\n\n## Visualising Monte Carlo **Geary’s C**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.004402\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.007436493\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n```\n\n\n:::\n\n```{.r .cell-code}\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n:::\n\n<br/><br/>\n\n## 4.0 **Spatial Correlogram**\n\n-   **Spatial Correlograms**: Useful for examining patterns of spatial autocorrelation.\n\n-   **Function**: Show how correlated pairs of spatial observations are as distance (lag) increases.\n\n-   **Plot Type**: Graphs of autocorrelation indices (like Moran’s I or Geary’s c) against distance.\n\n-   **Comparison with Variograms**:\n\n    -   Not as fundamental as variograms, which are key in geostatistics.\n\n    -   Provide richer information for exploratory and descriptive analysis than variograms.\n\n::: panel-tabset\n## Compute Moran’s I correlogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n-   **Plot Limitations**:\n\n    -   Plots may not give a complete interpretation of autocorrelation results.\n\n    -   Not all autocorrelation values are statistically significant.\n\n-   **Importance of Full Analysis**:\n\n    -   Necessary to examine the complete analysis report.\n\n    -   Printing the analysis results provides more detailed insights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(MI_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n::: callout-note\n### Statistical Observations\n\n1.  **Positive Autocorrelation**:\n\n    -   The first three lags (1, 2, and 3) show positive Moran's I values (0.30075, 0.20601, and 0.06683), indicating clustering of similar GDP per capita values at these distances.\n\n2.  **Statistical Significance**:\n\n    -   **Lags 1 and 2**: Highly significant (p-values of **2.189e-06** and **2.029e-06**), suggesting strong evidence of positive spatial autocorrelation.\n\n    -   **Lag 3**: Also significant (p-value of **0.0404**), indicating some level of clustering, but less strong than the first two lags.\n\n    -   **Lag 4**: Not significant (p-value of **0.2260**), suggesting a lack of clustering at this distance.\n\n    -   **Lag 5 and 6**: Show negative values (-0.15305 and -0.11871) with significant p-values (**5.984e-05** and **0.008886**), indicating that at these distances, similar values are less clustered.\n\n3.  **General Trend**:\n\n    -   The trend shows strong positive autocorrelation at shorter distances (lags 1-3), but transitions to negative autocorrelation at longer distances (lags 5-6).\n\n### Conclusion:\n\n-   There is strong evidence of positive spatial clustering of GDP per capita in Hunan Province at shorter distances, but this pattern diminishes and even reverses at greater distances, suggesting that local clusters may dissipate as distance increases.\n:::\n\n## Compute Geary’s C correlogram and plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(GC_corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n:::\n",
    "supporting": [
      "Hands-on_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}