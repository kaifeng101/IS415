{
  "hash": "10e71413d92c9b512138cc9e68d1a4d7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level\"\nauthor: \"kai feng\"\ndate: \"Sep 23, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# **Introduction**\n\n### Drug Abuse Overview\n\n-   **Global Impact**: Drug abuse has severe health, financial, and social consequences.\n\n-   **Prevalence**: In 2021, 1 in 17 people aged 15–64 worldwide used a drug in the past year.\n\n-   **Growth Trend**: Drug users increased from 240 million in 2011 to 296 million in 2021.\n\n### Drug Situation in Thailand\n\n-   **Geopolitical Context**: Proximity to the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)), a major drug production area, makes Thailand a key market and transit route for drug trafficking.\n\n-   **Youth Drug Abuse**:\n\n    -   Approximately 2.7 million young people in Thailand use drugs.\n\n    -   Around 300,000 youth aged 15-19 need drug treatment.\n\n    -   Vocational students are nearly twice as involved with drugs compared to secondary-school students.![](https://is415-ay2024-25t1.netlify.app/img/th_ex2_img1.png)\n\n**This Geospatial Analytics will Focus on:**\n\n-   **Objective:** Determine if drug abuse indicators in Thailand show spatial dependence.\n-   **Analysis Goals**:\n    -   Identify clusters, outliers, and hotspots of drug abuse.\n\n    -   Examine how these patterns change over time.\n\n<br/><br/>\n\n# **1.0 Setup**\n\n## 1.1 Installing R-Packages\n\n::: panel-tabset\n## *Importing and Transforming Data*\n\n-   `sf`:\n\n    -   For handling spatial vector data and transforming it into simple features (`sf`) objects.\n\n    -   Functions like `st_read()` for importing spatial data and `st_transform()` for coordinate reference system transformations.\n\n-   `tidyverse`: For data manipulation and transformation, including functions for working with `tibble` data frames.\n\n-   `readr`: For reading in CSV or other text-based data files if needed.\n\n-   `dplyr`: provide data manipulation capabilities (eg. to group and summarize the relationships between these columns)\n\n-   `arrow`: To read parquet files\n\n## *Displaying Maps*\n\n-   `tmap`: For creating thematic maps and displaying KDE layers.\n\n-   `ggplot2`: For additional custom visualizations if needed.\n\n-   *`scales`*: Transform the unit of measurement for coordinate\n\n-   `animation, png, magick`: For animation work\n\n## *Spatial Autocorrelation*\n\n-   `sfdep`: For performing both local and global spatial autocorrelation analysis\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, readr, ggplot2, tmap, dplyr, arrow, sfdep, scales, animation, png, magick, patchwork)\n```\n:::\n\n\n<br/>\n\n## 1.2 Data Acquisition\n\nWe will be using 2 sets of data:\n\n::: panel-tabset\n## Drug offenses Data\n\n-   **Source:** [[Thailand Drug Offenses \\[2017-2022\\]]{.underline}](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022)\n\n-   **Study Period:** 2017-2022\n\n## Administrative Boundaries\n\n-   **Source:** [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX.\n-   **Province Boundaries**: For understanding conflict distribution across larger administrative divisions.\n:::\n\n<br/>\n\n## 1.3 Importing Geospatial Data into R\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses_df <- read_parquet(\"data/drug_offense/thai_drug_offenses_2017_2022.parquet\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- read_csv(\"data/drug_offense/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince the data in CSV and Parquet formats are identical, we only need to import one of these file types.\n:::\n\n## Administrative Boundaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_boundaries <- st_read(dsn = \"data/subnational_administrative_boundary\", layer=\"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\ngkng\\Desktop\\School\\Geo -Local\\Take-home_Ex\\Take-home_Ex02\\data\\subnational_administrative_boundary' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n<br/>\n\n## 1.4 Checking Geospatial Data\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince\n\n-   Since the class of **drug_offenses** != sf object\n\nwe have to transform it.\n:::\n\n## Administrative Boundaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(province_boundaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(province_boundaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince Coordinate Reference System of **province_boundaries**\n\nis in 4326 (unit of measurement = degree), we have to transform it\n:::\n:::\n\n<br/>\n\n## 1.6 Data Preparation and Wrangling\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop & Rename column\ndrug_offenses <- drug_offenses %>% \n  select(fiscal_year, types_of_drug_offenses, no_cases, province_en) %>% \n  rename(\n    year = fiscal_year,\n    offense_type = types_of_drug_offenses,\n    case_count = no_cases,\n    province_name = province_en\n  )\n```\n:::\n\n\n## Administrative Boundaries\n\n##### Transform the Coordinate Reference System of these:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_boundaries <- province_boundaries %>%\n  st_transform(crs = 4240)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop & Rename column\nprovince_boundaries <- province_boundaries %>% \n  select(Shape_Leng, Shape_Area, ADM1_EN, ADM1_PCODE, geometry) %>% \n  rename(\n    province_name = ADM1_EN,\n    province_code = ADM1_PCODE\n  )\n```\n:::\n\n\n##### Sample plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = province_boundaries) +\n  geom_sf() +\n  theme_minimal() +\n  labs(title = \"Map of Geometries\",\n       subtitle = \"Displaying multipolygon geometries\",\n       caption = \"Source: Example Data\")\n```\n:::\n\n\n## Understanding the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for unmatched province_names between Drug Offenses & Province Boundaries data set\nunmatched_provinces <- drug_offenses %>%\n  left_join(province_boundaries, by = \"province_name\") %>%\n  filter(is.na(Shape_Leng)) %>%\n  select(province_name)\n\nunmatched_provinces <- unique(unmatched_provinces) #Loburi, buogkan\n\n\n\n# Transform the province_name in the Drug Offenses dataset\ndrug_offenses <- drug_offenses %>%\n  mutate(province_name = case_when(\n    province_name == \"Loburi\" ~ \"Lop Buri\",\n    province_name == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_name  # Keep the original name if no match\n  ))\n\n\n# Assign each drug offense to a province\ndrug_offenses_by_province <- drug_offenses %>%\n  left_join(province_boundaries, by = \"province_name\")\n\n# Check for any empty attributes in the test dataset\nempty_attributes <- sapply(drug_offenses_by_province, function(column) any(is.na(column)))\n\n# Identify columns with missing values\nmissing_columns <- names(empty_attributes[empty_attributes]) # character(0) = No missing Column\n```\n:::\n\n\n::: callout-warning\nThe **Drug Offenses** dataset has some naming issues with `province_name`.\n\nWe found two discrepancies: **Loburi** should be changed to **Lop Buri**, and **buogkan** should be updated to **Bueng Kan** to match the **Province Boundaries** dataset.\n\nWe will update the `province_name` entries in the **Drug Offenses** dataset accordingly.s\n:::\n:::\n\n<br/><br/>\n\n# 2.0 Understanding the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\noffense_type <- unique(drug_offenses_by_province$offense_type) \nprint(offense_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\n::: callout-note\nThese varying degrees of offense types may reveal patterns and trends in drug-related activities, providing a comprehensive understanding of the issue at hand.\n:::\n\n<br/><br/>\n\n# **3.0 Exploratory Data Analysis**\n\n## Summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- drug_offenses_by_province %>%\n  group_by(province_name, year) %>%\n  summarise(\n    total_cases = sum(case_count, na.rm = TRUE),\n    geometry = first(geometry)\n    )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'province_name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 462 × 4\n# Groups:   province_name [77]\n   province_name  year total_cases                                      geometry\n   <chr>         <dbl>       <dbl>                            <MULTIPOLYGON [°]>\n 1 Amnat Charoen  2017        5076 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 2 Amnat Charoen  2018        5651 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 3 Amnat Charoen  2019        7339 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 4 Amnat Charoen  2020        3949 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 5 Amnat Charoen  2021        8961 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 6 Amnat Charoen  2022        4459 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 7 Ang Thong      2017        1614 (((100.3381 14.79649, 100.3384 14.79607, 100…\n 8 Ang Thong      2018        2717 (((100.3381 14.79649, 100.3384 14.79607, 100…\n 9 Ang Thong      2019        2781 (((100.3381 14.79649, 100.3384 14.79607, 100…\n10 Ang Thong      2020        2636 (((100.3381 14.79649, 100.3384 14.79607, 100…\n# ℹ 452 more rows\n```\n\n\n:::\n:::\n\n\n## Top /Bottom 10 Related-Drug Incidents Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Loop through each year and plot top 10 provinces\nyears_to_plot <- unique(summary_stats$year)\n```\n:::\n\n\n::: panel-tabset\n## Top 10 Drug Abuse Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10_plot_list <- list()\n\n# Loop through each year and create the plots for top 10\nfor (current_year in years_to_plot) {\n  # Filter and sort the data for the specific year\n  top_10_year_data <- summary_stats %>%\n    filter(year == current_year) %>%\n    arrange(desc(total_cases)) %>%\n    head(10)\n  \n  # Create the plot for the current year\n  top_10_plot <- ggplot(top_10_year_data, aes(x = reorder(province_name, total_cases), y = total_cases)) +\n    geom_bar(stat = \"identity\", fill = \"pink\", width = 0.8) +\n    coord_flip() +\n    labs(x = NULL, y = NULL, subtitle = paste(\"Year:\", current_year)) +\n    scale_y_continuous(labels = scales::comma_format(accuracy = 1)) +\n    theme_minimal(base_size = 10) +\n    geom_text(aes(label = total_cases),\n              position = position_stack(vjust = 0.5),   \n              color = \"black\", \n              size = 3) +\n    theme(axis.text.x = element_blank(),   # Hide the y-axis text\n          axis.ticks.x = element_blank())  # Hide the y-axis ticks\n  \n  # Add the plot to the list\n  top_10_plot_list[[as.character(current_year)]] <- top_10_plot\n}\n\n# Combine the top 10 plots into a grid\ntop_10_plot_list <- wrap_plots(top_10_plot_list)\n\n# Add a single title to the combined plot\ntop_10_plot_list <- top_10_plot_list +\n  plot_annotation(title = \"Top 10 Provinces by Total Drug Abuse Cases Over the Years\")\n\n# Print the combined plot\nprint(top_10_plot_list)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Bottom 10 Drug Abuse Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a list to store the bottom 10 plots\nbottom_10_plot_list <- list()\n\n# Loop through each year and create the plots for bottom 10\nfor (current_year in years_to_plot) {\n  # Filter and sort the data for the specific year to get the bottom 10\n  bottom_10_year_data <- summary_stats %>%\n    filter(year == current_year) %>%\n    arrange(total_cases) %>%   # Ascending order to get bottom cases\n    head(10)\n  \n  # Create the plot for the current year\n  bottom_10_plot <- ggplot(bottom_10_year_data, aes(x = reorder(province_name, -total_cases), y = total_cases)) +\n    geom_bar(stat = \"identity\", fill = \"steelblue\", width = 0.8) +\n    coord_flip() +\n    labs(x = NULL, y = NULL, subtitle = paste(\"Year:\", current_year)) +  # Subtitle to display year\n    scale_y_continuous(labels = scales::comma_format(accuracy = 1)) +\n    theme_minimal(base_size = 10) +\n    geom_text(aes(label = total_cases),\n              position = position_stack(vjust = 0.5),   \n              color = \"black\", \n              size = 3) +\n    theme(axis.text.x = element_blank(),   # Hide the y-axis text\n          axis.ticks.x = element_blank())  # Hide the y-axis ticks\n  \n  # Add the plot to the list\n  bottom_10_plot_list[[as.character(current_year)]] <- bottom_10_plot\n}\n\n# Combine the bottom 10 plots into a grid\nbottom_10_plot_list <- wrap_plots(bottom_10_plot_list)\n\n# Add a single title to the combined plot\nbottom_10_plot_list <- bottom_10_plot_list +\n  plot_annotation(title = \"Bottom 10 Provinces by Total Drug Abuse Cases Over the Years\")\n\n# Print the combined plot\nprint(bottom_10_plot_list)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n:::\n\n## Trends over time for the entire country\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_trends <- drug_offenses_by_province %>%\n  group_by(year) %>%\n  summarise(total_cases = sum(case_count))\n\n# Plot trend over time with formatted y-axis labels\nggplot(drug_trends, aes(x = year, y = total_cases)) +\n  geom_line(color = \"blue\") +\n  geom_point(size = 3, color = \"red\") +  # Optional: Add points for better visibility\n  labs(title = \"Drug Abuse Cases Over Time\",\n       x = \"Year\", y = \"Total Cases\") +\n  scale_y_continuous(labels = comma)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n<br/><br/>\n\n# **4.0 Global Spatial Autocorrelation Analysis**\n\nOrganize into years for more detailed analysis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- st_as_sf(summary_stats)\n\nsummary_stats_2017 <- summary_stats %>%\n  filter(year == 2017) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2018 <- summary_stats %>%\n  filter(year == 2018) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2019 <- summary_stats %>%\n  filter(year == 2019) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2020 <- summary_stats %>%\n  filter(year == 2020) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2021 <- summary_stats %>%\n  filter(year == 2021) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2022 <- summary_stats %>%\n  filter(year == 2022) %>%\n  ungroup()  # Remove any grouping\n```\n:::\n\n\n### **Deriving Queen’s Contiguity weights: sfdep methods**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb <- st_contiguity(summary_stats_2017$geometry)\nwt <- st_weights(nb, style = \"W\", allow_zero = TRUE)\n\n\nwm_q_2017 <- summary_stats_2017 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2018 <- summary_stats_2018 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2019 <- summary_stats_2019 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2020 <- summary_stats_2020 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2021 <- summary_stats_2021 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2022 <- summary_stats_2022 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n```\n:::\n\n\n::: callout-note\nTo derive spatial autocorrelation, we first gather the relevant geographic points for our study area:\n\n1.  **Filtering for Unique Geographic Points**: The `summary_stats` dataset contains multiple entries for each geographic point across different years. We filter it to retain data for a single year (e.g., 2017) to work with a unique set of locations.\n\n2.  **Identifying Neighbors**: To assess the spatial relationships between areas, we identify neighboring regions. We use Queen's contiguity weights, which include all neighbors that touch at edges or corners, capturing comprehensive spatial interactions.\n\n3.  **Calculating Weights**: After identifying neighbors, we calculate spatial weights that quantify the influence neighboring areas have on one another. These weights are crucial for measuring spatial autocorrelation, as they inform how a variable in one area relates to values in its neighbors.\n:::\n\n## 2017: An Initial Overview\n\n### Global Moran' I\n\n::: panel-tabset\n## Computing Global Moran’ I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_2017 <- global_moran(wm_q_2017$total_cases,\n                       wm_q_2017$nb,\n                       wm_q_2017$wt)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in lag.listw(listw, z, zero.policy = zero.policy, NAOK = NAOK): NAs in\nlagged values\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(moranI_2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num NA\n $ K: num 31.4\n```\n\n\n:::\n:::\n\n\n## Performing Global Moran’s I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_2017$total_cases,\n                  wm_q_2017$nb,\n                  wm_q_2017$wt,\n                  zero.policy = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.4598, p-value = 0.006951\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.133140650      -0.013333333       0.003545946 \n```\n\n\n:::\n:::\n\n\n::: callout-note\nMoran I statistic (0.133140650) -\\> indicates a positive correlation in the variable of interest (e.g., total cases).\n\nSD of 2.4598 -\\> suggests that Moran’s I is greater than the expected value under the null hypothesis.\n\nP-value of 0.006951 -\\> is \\< 0.05, indicating strong statistical significance.\n\nExpectation of -0.013333333 -\\> suggests we would expect slight negative autocorrelation if there were no spatial structure.\n\nSince the p-value \\< 0.05, we reject the null hypothesis of no spatial autocorrelation. This strongly suggests there is significant positive spatial clustering of the variable in the study area (regions with high values are near areas with high values).\n:::\n\n## Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2017 <- global_moran_perm(wm_q_2017$total_cases,\n                                              wm_q_2017$nb,\n                                              wm_q_2017$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2017\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.13314, observed rank = 98, p-value = 0.04\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2017$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.151935 -0.056539 -0.030537 -0.018749  0.008258  0.162326 \n```\n\n\n:::\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2017.png\", width = 800, height = 600)\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2017$res\n\n# To capture\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2017\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To Show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2017\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nTo ensure our results are accurate, we'll perform a Monte Carlo (permutation) test on Moran’s I statistic. This method helps us understand if the observed clustering of values is statistically significant.\n\nFirst, we set the seed using `set.seed(1234)`. This step is crucial because it guarantees that our simulation results will be reproducible. Every time we run the simulation, we should get the same outcomes, which is important for consistency in our analysis.\n\nNow, looking at the results from our permutation test:\n\n-   **Moran’s I statistic**: 0.13314\n\n-   **Observed rank**: 98\n\n-   **P-value**: 0.04\n\nThe p-value being less than 0.05 tells us that there's strong statistical evidence against the null hypothesis of no spatial autocorrelation. This means we can conclude there’s significant positive spatial clustering in our data—areas with high values are near other areas with high values.\n\nLooking at the summary of the simulated statistics, with the maximum being 0.162326 and the minimum at -0.151935. The distribution of these values helps us understand the expected behavior of our statistic under the null hypothesis.\n:::\n:::\n\n::: callout-note\nIt's important to note that some areas may have no neighboring regions, which results in null weights. To address this, we use `zero.policy = TRUE` in our analysis, allowing regions with no neighbors to be included without causing errors in calculations.\n\nHowever, it's essential to understand that Global Moran's I does not accommodate regions without neighbors in its calculations, meaning that these regions, even when included, will not contribute to the overall assessment of spatial autocorrelation.\n\nConsequently, regions with null weights may still affect the results, leading to potential skewing of the analysis and limiting its interpretability. Therefore, careful consideration of how to handle such regions is crucial for ensuring accurate spatial analysis.\n:::\n\n## Visualising across time span (2017-2022)\n\n::: panel-tabset\n## 2018 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2018 <- global_moran_perm(wm_q_2018$total_cases,\n                                              wm_q_2018$nb,\n                                              wm_q_2018$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2018\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11637, observed rank = 96, p-value = 0.08\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2018$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.13864 -0.06366 -0.02856 -0.01870  0.02001  0.17737 \n```\n\n\n:::\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2018.png\", width = 800, height = 600)\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2018$res\n\n# To capture\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2018\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2018\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n## 2019 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2019 <- global_moran_perm(wm_q_2019$total_cases,\n                                              wm_q_2019$nb,\n                                              wm_q_2019$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2019\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15541, observed rank = 98, p-value = 0.04\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2019$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.14482 -0.06808 -0.02675 -0.01963  0.01235  0.19844 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2019$res\n\npng(\"data/rds/global_moran_perm_result_2019.png\", width = 800, height = 600)\n\n# To plot\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2019\")\nabline(v=0, \n       col=\"red\") \n\n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2019\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n## 2020 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2020 <- global_moran_perm(wm_q_2020$total_cases,\n                                              wm_q_2020$nb,\n                                              wm_q_2020$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2020\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.1296, observed rank = 97, p-value = 0.06\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2020$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.152560 -0.076142 -0.031856 -0.026822  0.006521  0.194366 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2020$res\n\npng(\"data/rds/global_moran_perm_result_2020.png\", width = 800, height = 600)\n# To capture\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2020\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2020\")\nabline(v=0, \n       col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n## 2021 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2021 <- global_moran_perm(wm_q_2021$total_cases,\n                                              wm_q_2021$nb,\n                                              wm_q_2021$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2021\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19889, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2021$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17499 -0.08997 -0.02457 -0.02653  0.02894  0.19889 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2021$res\n\npng(\"data/rds/global_moran_perm_result_2021.png\", width = 800, height = 600)\n\n# To capture\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2021\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2021\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n## 2022 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2022 <- global_moran_perm(wm_q_2022$total_cases,\n                                              wm_q_2022$nb,\n                                              wm_q_2022$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2022\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.20113, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2022$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17928 -0.09257 -0.03519 -0.02521  0.03933  0.20113 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2022$res\n\npng(\"data/rds/global_moran_perm_result_2022.png\", width = 800, height = 600)\n\n# To capture\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2022\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# To show\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2022\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n:::\n\n::: callout-note\n-   The results indicate a general trend of positive spatial autocorrelation from 2017 to 2022, with significant clustering observed in 2021 and 2022.\n\n-   The years 2017, 2019, 2021, and 2022 show statistically significant evidence of clustering, while 2018 and 2020 have lower evidence of spatial correlation.\n\n-   This trend suggests that the variable of interest tends to cluster in certain areas, particularly from 2021 onwards, which may warrant further investigation into the factors driving this clustering.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify the directory containing the images\nimage_directory <- \"data/rds/\"\n\n# Get a list of image files in the specified directory\nglobal_moran_perm_result_files <- list.files(image_directory, pattern = \"\\\\.png$\", full.names = TRUE)\n\n# Load saved images and combine them into an animated GIF\nglobal_moran_images <- lapply(global_moran_perm_result_files, image_read)\n\n# Create an animation from the Global Moran's images\nglobal_moran_animation <- image_animate(image_join(global_moran_images), fps = 1)\n\n# Define the path for the GIF animation\nglobal_moran_gif_path <- \"data/rds/global_moran_animation.gif\"\n\n# Save the animation as a GIF file\nimage_write(global_moran_animation, path = global_moran_gif_path)\n\n# Print confirmation that the GIF was saved\nprint(\"Global Moran's animation saved as spatio_temporal_global_moran_animation.gif\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Global Moran's animation saved as spatio_temporal_global_moran_animation.gif\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the GIF using magick\nglobal_moran_gif_image <- image_read(global_moran_gif_path)\nprint(global_moran_gif_image)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  format width height colorspace matte filesize density\n  <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>  \n1 GIF      800    600 sRGB       FALSE        0 72x72  \n2 GIF      800    600 sRGB       FALSE        0 72x72  \n3 GIF      800    600 sRGB       FALSE        0 72x72  \n4 GIF      800    600 sRGB       FALSE        0 72x72  \n5 GIF      800    600 sRGB       FALSE        0 72x72  \n6 GIF      800    600 sRGB       FALSE        0 72x72  \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-34-1.gif)\n:::\n:::\n\n\n<br/><br/>\n\n# **5.0 Local Spatial Autocorrelation Analysis**\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}