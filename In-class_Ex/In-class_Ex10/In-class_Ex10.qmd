---
title: "In-class Exercise 10"
author: "kai feng"
date: "Oct 28, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
---

# 1.0 Setup

### 1.1 Installing R-Packages

```{r}
pacman::p_load(olsrr, ggstatsplot, sf, tmap, 
               tidyverse, gtsummary, performance,
               see, sfdep)
```

### 1.2 Importing data

::: panel-tabset
```{r}
mpsz = st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")

# Updating CRS info
mpsz_svy21 <- st_transform(mpsz, 3414)


condo_resale = read_csv("data/aspatial/Condo_resale_2015.csv")

condo_resale_sf <- st_as_sf(condo_resale,
                            coords = c("LONGITUDE", "LATITUDE"),
                            crs=4326) %>%
  st_transform(crs=3414)
```
:::

<br/><br/>

# 2.0 Correlation Analysis -ggstatsplot methods

## Correlation Matrix

Good to check if there are pair independent variables with high correlation

```{r}
#| fig-width: 10
#| fig-height: 12

ggcorrmat(condo_resale[,5:23])
```

## Bulding a Hedonic Pricing Model by using Multiple Linear Regression Method

```{r}
condo_mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + 
                  AGE    + PROX_CBD + PROX_CHILDCARE + 
                  PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + 
                  PROX_HAWKER_MARKET + PROX_KINDERGARTEN + 
                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + 
                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + 
                  PROX_SUPERMARKET + PROX_BUS_STOP + 
                  NO_Of_UNITS + FAMILY_FRIENDLY + 
                  FREEHOLD + LEASEHOLD_99YR, 
                data=condo_resale_sf)
summary(condo_mlr)
```

::: callout-note
1Q: Going to overrestimate by -286903

3Q: Going to underestimate by 239412

(+ underestimate, - overestimate)

\*\*\* -\> 0.001 (99%)

\*\* -\> 95%

\*-\> 90%
:::

## Generating tidy linear regression report

```{r}
olsrr_condo <- ols_regress(condo_mlr)

olsrr_condo
```

::: callout-note
olsrr_condo \$model data -\> is from condo.mlr
:::

## Variable Selection

-   [`ols_step_forward_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_forward_p)

-   [`ols_step_backward_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_backward_p)

-   [`ols_step_both_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_both_p)

Stepwise regression is the step-by-step iterative construction of a regression model that involves the selection of independent variables to be used in a final model

It involves adding or removing potential explanatory variables in succession and testing for statistical significance after each iteration.

::: panel-tabset
## ols_step_forward_p

```{r}
# fig-width: 12
# fig-height: 10

condo_fw_mlr <- ols_step_forward_p(
  condo_mlr, # this is the model
  p_val = 0.05,
  details = FALSE)

condo_fw_mlr

plot(condo_fw_mlr)
```

::: callout-note
What u want is for it to keep increasing then slowly it flatten out (R-Square)
:::

## ols_step_backward_p (Backward stepwise)

```{r}
# fig-width: 12
# fig-height: 10

condo_bw_mlr <- ols_step_backward_p(
  condo_mlr, # this is the model
  p_val = 0.05,
  details = FALSE)

condo_bw_mlr

plot(condo_bw_mlr)
```

## ols_step_both_p (Stepwise)

```{r}
# fig-width: 12
# fig-height: 12

condo_sb_mlr <- ols_step_both_p(
  condo_mlr, # this is the model
  p_val = 0.05,
  details = FALSE)

condo_sb_mlr

plot(condo_sb_mlr)
```
:::

## Model selection

```{r}
metric <- compare_performance(condo_mlr,
                              condo_fw_mlr$model,
                              condo_bw_mlr$model,
                              condo_sb_mlr$model)

metric$Name <- gsub(".*\\\\([a-zA-Z0-9_]+)\\\\, \\\\model\\\\.*", "\\1", metric$Name)

# plot radar
plot(metric) # from c package
```

::: callout-note
the different indices are normalized and larger values indicate better model performance.

Hence, point closer to the center indicate worse fit indices.

\[since orange come first, it will be covered, because orange and green is the same, will overplot\]
:::

## Visualize model parameters

```{r}
#| fig-height: 10

ggcoefstats(condo_sb_mlr$model,
            sort = "ascending")
```

## Checking for multicollinearity

-   a statistical concept where \>= 2 independent variables in a regression model are correlated

-   Use Variance Inflation Factor (VIF) to detect & measure the amt of collinearity in a multiple regression model

    -   measures how much the variance of the estimated regression coefficients is inflated VS when the predictor variables are not linearly related

    -   \< 5: low multicollinearity

    -   5-10: moderate multcollinearity

    -   \>10: strong multicollinearity

```{r}
check_collinearity(condo_sb_mlr$model)

plot(check_collinearity(condo_sb_mlr$model)) +
  theme(axis.text.x = element_text(
    angle = 45, 
    hjust = 1
  ))
```

## Linearity, Normality Assumption Test + Outlier

::: panel-tabset
## Linearity Assumption Test

In multiple linear regression, is impt to Test the assumption that linearity & additivity of the relationship between dependent & independent variables

```{r}
out <- plot(check_model(condo_sb_mlr$model,
                        panel = FALSE))

out[[2]]
```

## Normality Assumption Test

Multiple Linear Regression analysis assumes that the residuals (the differences between observed & predicted values) are normally distributed.

This assumption can be assessed by using statistical graphics, or via statistical test (eg. Kolmogorov-Smirnov test)

```{r}
plot(check_normality(condo_sb_mlr$model))

```

## Checking of outliers

```{r}
outliers <- check_outliers(condo_sb_mlr$model,
                           method = "cook")

outliers

plot(outliers <- check_outliers(condo_sb_mlr$model,
                           method = "cook"))
```
:::

## Spatial Non-stationary Assumption

The hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.

-   Ho: The residuals are randomly distributed (also known as spatial stationary)

-   H1: The residuals are spatially non-stationary

::: panel-tabset
## Visualising spatial non-stationary

```{r}
# export the residual of the hedonic pricing model and save it as a data frame
mlr_output <- as.data.frame(condo_fw_mlr$model$residuals) %>% 
  rename(`FW_MLR_RES` = `condo_fw_mlr$model$residuals`)

# join the newly created data frame with condo_resale_sf object
condo_resale_sf <- cbind(condo_resale_sf, 
                        mlr_output$FW_MLR_RES) %>%
  rename(`MLR_RES` = `mlr_output.FW_MLR_RES`)

tmap_mode("view")
tm_shape(mpsz)+
  tmap_options(check.and.fix = TRUE) +
  tm_polygons(alpha = 0.4) +
tm_shape(condo_resale_sf) +  
  tm_dots(col = "MLR_RES",
          alpha = 0.6,
          style="quantile") 
tmap_mode("plot")
```

## Spatial stationary test

To proof our observation is indeed true, the Moran's I test will be performed

```{r}
# compute the distance-based weight matrix by using dnearneigh() function of spdep.
condo_resale_sf <- condo_resale_sf %>%
  mutate(nb = st_knn(geometry, k=6,
                     longlat = FALSE),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1)

# global moran_perm 
global_moran_perm(condo_resale_sf$MLR_RES, 
                  condo_resale_sf$nb, 
                  condo_resale_sf$wt, 
                  alternative = "two.sided", 
                  nsim = 99)
```

::: callout-note
The Global Moran’s I test for residual spatial autocorrelation shows that **it’s p-value is less than the alpha value of 0.05**. Hence, we **reject the null hypothesis** that the residuals are randomly distributed.

Since the Observed Global Moran I = 0.25586 which is greater than 0, we can **infer** that the residuals resemble **cluster distribution**.
:::
:::
